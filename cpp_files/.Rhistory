library(mcmcTuto)
remove.packages("mcmcTuto", lib="~/AppData/Local/R/win-library/4.2")
library(mcmcTuto)
setwd("~/OneDrive - Imperial College London/Trainings/COURSES/MCMC/Cy/clean/mcmcTuto")
devtools::build()
devtools::install()
library(mcmcTuto)
library(tidyverse)
library(firatheme)
library(mcmcTuto)
data
true_mu = 2.14
true_sd = 0.12
data <- rgamma(1000, shape=(true_mu/true_sd)^2, scale = true_sd^2/true_mu)
output <- mcmcTuto::mcmc(
n_iter = 5000,
init_mu = 10,
init_sd = 3,
sd_proposal_mu = 0.05 ,
sd_proposal_sd = 0.05 ,
prior_mu = 4,
prior_sd = 1,
data = data
) %>%
as_tibble()
clean_chain <- function(chain, thinning = 1, burnin = 0){
chain %>%
filter((iter %in%  seq(1,nrow(.), thinning)) & iter >= burnin) %>%
pivot_longer(cols = c(mu_chain, sd_chain),
names_to = "param")
}
trace_plot <- function(chain){
chain %>%
ggplot(aes(x = iter, y = value, col = param ))+
geom_line() +
facet_wrap(~param)+
theme_fira()+
scale_color_fira()+
labs(x = "iteration")+
theme(legend.position = "none")
}
( sum(output$accept_mu, na.rm = T)/nrow(output) ) *100
( sum(output$accept_sd, na.rm = T)/nrow(output) ) *100
trace_plot(clean_chain(output)) #no thinning, no burnin
trace_plot(clean_chain(output, thinning =  50, burnin = 0))
clean_chain(output, thinning =  50, burnin = 500) %>%
filter(param == "sd_chain") %>%
ggplot(aes(x = iter, y = value))+
geom_line()
clean_chain(output, thinning =  50, burnin = 500) %>%
ggplot(aes(x = iter, y = loglike_chain))+
geom_line()
# Calculate the density of the mu_chain and sd_chain values
density_df <- clean_chain(output,thinning =  50, burnin = 500) %>%
select(param, value) %>%
group_by(param) %>%
nest() %>%
mutate(density = map(data, ~density(.$value))) %>%
select(-data) %>%
mutate(density = map(density, broom::tidy)) %>%
unnest(density)
density_df %>%
ggplot(aes(x,y, fill = param)) +
geom_area(alpha = 0.5) +
facet_wrap(~ param, scales = "free" )+
scale_fill_fira()+
theme(legend.position = "none")
clean_chain(output, thinning =  50, burnin = 500) %>%
group_by(param) %>%
summarise(mean = mean(value),
lower_cri = quantile(value, 0.025),
upper_cri = quantile(value, 0.975)) %>%
mutate(true_val = c(true_mu,true_sd))
Rcpp::sourceCpp("~/OneDrive - Imperial College London/Trainings/COURSES/MCMC/Cy/clean/cpp_files/mcmc.cpp")
setwd("~/OneDrive - Imperial College London/Trainings/COURSES/MCMC/Cy/clean/cpp_files")
Rcpp::sourceCpp("mcmc.cpp")
Rcpp::sourceCpp("cpp_model.cpp")
Rcpp::sourceCpp("move.cpp")
library(Rcpp)
Rcpp::sourceCpp("move.cpp")
library(Rcpp)
Rcpp::sourceCpp("move.cpp")
Rcpp::sourceCpp("move.cpp")
setwd("~/OneDrive - Imperial College London/Trainings/COURSES/MCMC/Cy/clean/cpp_files")
Rcpp::sourceCpp("move.cpp")
Rcpp::sourceCpp("move.cpp")
install.packages("Rcpp")
library(Rcpp)
Rcpp::sourceCpp("move.cpp")
